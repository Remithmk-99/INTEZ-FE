{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/project-modules/services/api.service.ts","./src/app/project-modules/services/general.service.ts","./src/app/project-modules/services/interceptor.interceptor.ts","./src/app/project-modules/shared/shared.module.ts","./src/app/project-modules/user/components/header/header.component.ts","./src/app/project-modules/user/components/header/header.component.html","./src/app/project-modules/user/components/sidebar/sidebar.component.ts","./src/app/project-modules/user/components/sidebar/sidebar.component.html","./src/app/project-modules/user/user.component.ts","./src/app/project-modules/user/user.component.html","./src/environments/environment.development.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  // {\n  //   path: '',\n  //   redirectTo: 'admin',\n  //   pathMatch: 'full'\n  // },\n  {\n    path: '',\n    redirectTo: 'auth',\n    pathMatch: 'full'\n  },\n  {\n    path: 'auth',\n     loadChildren: () => import('./project-modules/auth/auth.module').then(module => module.AuthModule)\n  },\n  {\n    path: 'admin',\n    loadChildren: () => import('./project-modules/admin/admin.module').then(module => module.AdminModule)\n  },\n  {\n    path: 'user',\n    loadChildren: () => import('./project-modules/user/user.module').then(module => module.UserModule)\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Employee Engagement';\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SharedModule } from './project-modules/shared/shared.module';\nimport { UserComponent } from './project-modules/user/user.component';\nimport { HeaderComponent } from './project-modules/user/components/header/header.component';\nimport { SidebarComponent } from './project-modules/user/components/sidebar/sidebar.component';\n// import { SocialLoginModule, SocialAuthServiceConfig } from 'angularx-social-login';\n// import { GoogleLoginProvider } from 'angularx-social-login';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { InterceptorInterceptor } from './project-modules/services/interceptor.interceptor'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SidebarComponent,\n    UserComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    SharedModule,\n    BrowserAnimationsModule,\n    // SocialLoginModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: InterceptorInterceptor,\n      multi: true\n    },\n    // {\n    //   provide: 'SocialAuthServiceConfig',\n    //   useValue: {\n    //     autoLogin: false,\n    //     providers: [\n    //       {\n    //         id: GoogleLoginProvider.PROVIDER_ID,\n    //         provider: new GoogleLoginProvider(\n    //           '180688556478-ul7b05u5j0n9mmob4391ibdvioegc6nj.apps.googleusercontent.com'\n    //         )\n    //       }\n    //     ]\n    //   } as SocialAuthServiceConfig,\n    // }    \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  baseUrl = environment.apiUrl\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ExecuteGet(url: string, urlParam?: string, queryParam?: HttpParams): Observable<Object> {\r\n    if (urlParam) {\r\n      url = url + '/' + urlParam;\r\n    }\r\n    return this.http.get(url, { params: queryParam });\r\n  }\r\n\r\n  ExecutePost(url: string, body: any, urlParam?: string, queryParam?: HttpParams): Observable<Object> {\r\n    if (urlParam) {\r\n      url = url + '/' + urlParam;\r\n    }\r\n    return this.http.post(url, body, { params: queryParam });\r\n  }\r\n\r\n  ExecutePut(url: string, body: any, urlParam?: string, queryParam?: HttpParams): Observable<Object> {\r\n    if (urlParam) {\r\n      url = url + '/' + urlParam;\r\n    }\r\n    return this.http.put(url, body, { params: queryParam });\r\n  }\r\n\r\n  ExecuteDelete(url: string, urlParam?: string, queryParam?: HttpParams): Observable<Object> {\r\n    if (urlParam) {\r\n      url = url + '/' + urlParam;\r\n    }\r\n    return this.http.delete(url, { params: queryParam });\r\n  }\r\n\r\n  ExecutePatch(url: string, body: any, urlParam?: string, queryParam?: HttpParams): Observable<Object> {\r\n    if (urlParam) {\r\n      url = url + '/' + urlParam;\r\n    }\r\n    return this.http.patch(url, body, { params: queryParam });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { ApiService } from './api.service';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GeneralService {\r\n  unreadMessage = new BehaviorSubject(null)\r\n  constructor(private router: Router,\r\n    private apiService: ApiService) { }\r\n\r\n\r\n\r\n\r\n\r\n    get getToken() {\r\n        if (localStorage.getItem('intezToken')) {\r\n          return localStorage.getItem('intezToken')\r\n        }\r\n        else {\r\n          return null\r\n        }\r\n      }\r\n    \r\n \r\n  logOut() {\r\n    localStorage.clear()\r\n    this.router.navigate(['/'])\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { GeneralService } from './general.service';\r\n\r\n@Injectable()\r\nexport class InterceptorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(\r\n    private general: GeneralService,\r\n  ) { }\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n\r\n    if (request.headers.get('Skip')) {\r\n      const newHeaders = request.headers.delete('Skip')\r\n      const newRequest = request.clone({ headers: newHeaders });\r\n      return next.handle(newRequest);\r\n    }\r\n    else if (this.general.getToken) {\r\n        const modified = request.clone({\r\n          setHeaders: {\r\n            Authorization: this.general.getToken\r\n          }\r\n        });\r\n        return next.handle(modified);\r\n    } else {\r\n      return next.handle(request);\r\n    }\r\n      }\r\n\r\n  }\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker'\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatExpansionModule,\r\n    MatCheckboxModule,\r\n  ],\r\n  exports: [\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatExpansionModule,\r\n    MatCheckboxModule,\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n  @Output() sideOpenEvent = new EventEmitter<boolean>();\n  @Input()\n  isSidebarOpened: any;\n\n  constructor(){\n\n  }\n  ngOnChanges(): void {\n    console.log(\"this.isSidebarOpened\",this.isSidebarOpened)\n  }\n}\n","\n<div >\n    <div   class=\"row home-div\"> \n      <div class=\"col\" >\n        <img src=\"../../../../assets//images//logo.png\" width=\"150px\" height=\"50px\">\n    </div>\n      <div class=\"col\" >\n       \n       <div class=\"side-head\">       \n        <img src=\"../../../../../assets//icons/plus.svg\" style=\"position: relative;top:0px;left: 56px;\">\n          <img src=\"../../../../../assets//icons/Rectangle 6 (1).svg\" >\n         <img src=\"../../../../../assets//icons/bell.svg\" >\n        <span [routerLink]=\"['/user/user-profile']\">\n          <img class=\"dp\" src=\"../../../../../assets//images//sample-profile-picture.png\">\n        </span>\n             \n\n      </div>\n       \n\n        \n      </div>\n</div>\n</div>","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent {\n  activeButton: number =1;\n  @Output() sideOpenEvent = new EventEmitter<boolean>();\n  @Input()\n  isSidebarOpened: any;\n\n  menuItems: any[] = [\n    {\n      index:1,\n      path: '/user/home',\n      title: 'Home',\n      icon: '../../../../../assets/icons/home.svg'\n    },\n    {\n      index:2,\n      path: '/user/timesheet-dashboard',\n      title: 'Timesheet',\n      icon: '../../../../../assets/icons/timesheetinactive.svg'\n    },\n    {\n      index:3,\n      path: '/user/home',\n      title: 'ActivityFeed',\n      icon: '/assets/icons/activityfeed.svg'\n    },\n    {\n      index:4,\n      path: '/user/home',\n      title: 'Assignments',\n      icon: '../../../../../assets/icons/assignments.svg'\n    },\n    {\n      index:5,\n      path: '/user/home',\n      title: 'Events',\n      icon: '../../../../../assets/icons/events.svg'\n    },\n    {\n      index:6,\n      path: '/user/home',\n      title: 'Settings',\n      icon: '../../../../../assets/icons/settings.svg'\n    }\n  ];\n\n\nconstructor(\n   private router:Router\n){\n  console.log(\"this.isSidebarOpened\",this.isSidebarOpened)\n}\n \n\n  onToggle() {\n    this.isSidebarOpened = !this.isSidebarOpened;\n    this.sideOpenEvent.emit(this.isSidebarOpened);\n   }\n  \n\n  activateButton(index:number,path:string) {\n    this.activeButton = index;\n    this.router.navigateByUrl(path)\n  }\n}\n","<div class=\"outer-div\">\n  <div class=\"sidebarMenu\" [ngClass]=\"\">\n    <div class=\"sideBarUst text-center pt-3\">\n      <div class=\"toggleIcon mt-3\" style=\"cursor: pointer\">\n        <span style=\"padding: 10px\" (click)=\"onToggle()\">\n          <img\n            src=\"../../../../../assets//icons/bars-solid.svg\"\n            class=\"toogle-icon\"\n          />\n        </span>\n\n        <div style=\"margin: 30px 10px 30px 10px\">\n          <div *ngFor=\"let item of menuItems\">\n            <button\n              [class.active]=\"activeButton === item?.index\"\n              (click)=\"activateButton(item?.index, item?.path)\"\n            >\n              <span><img class=\"nav-icon\" [src]=\"item.icon\" /></span>\n              <span *ngIf=\"isSidebarOpened\" style=\"padding-top: 5px\">{{\n                item.title\n              }}</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, HostListener } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent {\n  isSidebarOpened: boolean = false;\n  scrWidth: any;\n  sidebarStatus: string = 'open';\n  @HostListener('window:resize', ['$event'])\n  getScreenSize(event:any) {\n    this.scrWidth = window.innerWidth;\n    if (this.scrWidth < 1120) this.isSidebarOpened = false;\n    else this.isSidebarOpened = true;\n  }\n  constructor() { }\n\n  ngOnInit(): void {\n    if (window.innerWidth < 1120) {\n      this.isSidebarOpened = false;\n    } else {\n      this.isSidebarOpened = true;\n    }\n  }\n\n  sidebarEvent(value:any) {\n\n    this.isSidebarOpened = value;\n  }\n\n\n}\n\n\n","\n<div class=\"full-height\">\n    <div  class=\"sidebarMenu\" [ngClass]=\"{'open-sidebar': isSidebarOpened,'close-sidebar': !isSidebarOpened}\" class=\"sidebarMenu\">\n        <app-sidebar [isSidebarOpened]=\"isSidebarOpened\" (sideOpenEvent)=\"sidebarEvent($event)\">\n        </app-sidebar>\n    </div>\n    <div   class=\"main full-height\" [ngClass]=\"{'open-menu': isSidebarOpened,'close-menu': !isSidebarOpened}\">\n  \n        <div class=\"router-view-div full-height\">\n            <app-header></app-header>\n            <router-outlet></router-outlet>\n        </div>\n  \n    </div>\n  </div>\n  ","export const environment = {\r\n    // baseURL:\"http://localhost:9191/\",\r\n    apiUrl: 'https://zoft-intez-user-service-be.azurewebsites.net/api/v1/',\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["RouterModule","routes","path","redirectTo","pathMatch","loadChildren","then","module","AuthModule","AdminModule","UserModule","AppRoutingModule","forRoot","imports","exports","AppComponent","constructor","selectors","decls","vars","template","i0","BrowserModule","BrowserAnimationsModule","SharedModule","UserComponent","HeaderComponent","SidebarComponent","HttpClientModule","HTTP_INTERCEPTORS","InterceptorInterceptor","AppModule","bootstrap","provide","useClass","multi","declarations","environment","ApiService","http","apiUrl","ExecuteGet","url","urlParam","queryParam","get","params","ExecutePost","body","post","ExecutePut","put","ExecuteDelete","delete","ExecutePatch","patch","factory","providedIn","BehaviorSubject","GeneralService","router","apiService","getToken","localStorage","getItem","logOut","clear","navigate","general","intercept","request","next","headers","newHeaders","newRequest","clone","handle","modified","setHeaders","Authorization","CommonModule","FormsModule","ReactiveFormsModule","MatMenuModule","MatIconModule","MatDialogModule","MatRadioModule","MatDatepickerModule","MatNativeDateModule","MatExpansionModule","MatCheckboxModule","EventEmitter","ngOnChanges","console","log","isSidebarOpened","inputs","outputs","sideOpenEvent","features","consts","index","title","icon","onToggle","emit","activateButton","activeButton","navigateByUrl","ctx","getScreenSize","event","scrWidth","window","innerWidth","ngOnInit","sidebarEvent","value","hostBindings","__NgCli_bootstrap_1","bootstrapModule","catch","err","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}